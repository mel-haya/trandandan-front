{"version":3,"file":"js/457.b892b5cb.js","mappings":"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","sources":["webpack://p5test/./src/axios.ts","webpack://p5test/./src/stores/user.ts","webpack://p5test/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://p5test/./node_modules/engine.io-parser/build/esm/commons.js","webpack://p5test/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://p5test/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://p5test/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://p5test/./node_modules/engine.io-parser/build/esm/index.js","webpack://p5test/./node_modules/@socket.io/component-emitter/index.mjs","webpack://p5test/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://p5test/./node_modules/engine.io-client/build/esm/util.js","webpack://p5test/./node_modules/engine.io-client/build/esm/transport.js","webpack://p5test/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://p5test/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://p5test/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://p5test/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://p5test/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://p5test/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://p5test/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://p5test/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://p5test/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://p5test/./node_modules/engine.io-client/build/esm/socket.js","webpack://p5test/./node_modules/engine.io-client/build/esm/index.js","webpack://p5test/./node_modules/socket.io-client/build/esm/url.js","webpack://p5test/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://p5test/./node_modules/socket.io-parser/build/esm/binary.js","webpack://p5test/./node_modules/socket.io-parser/build/esm/index.js","webpack://p5test/./node_modules/socket.io-client/build/esm/on.js","webpack://p5test/./node_modules/socket.io-client/build/esm/socket.js","webpack://p5test/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://p5test/./node_modules/socket.io-client/build/esm/manager.js","webpack://p5test/./node_modules/socket.io-client/build/esm/index.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nlet $token:string = Cookies.get('accessToken') === undefined ? '' : Cookies.get('accessToken')!;\n\nfunction updateToken(){\n    $token = Cookies.get('accessToken')!\n    $api = axios.create({\n        baseURL: `http://${process.env.VUE_APP_APP_NAME}:${process.env.VUE_APP_HOST_PORT}`,\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer ' + $token\n        }\n    });\n}\n\nlet $api = axios.create({\n    baseURL: `http://${process.env.VUE_APP_APP_NAME}:${process.env.VUE_APP_HOST_PORT}`,\n    headers: {\n        'Content-type': 'application/json',\n        'Authorization': 'Bearer ' + $token\n    }\n});\n\nexport {$api, $token, updateToken};","import { defineStore } from \"pinia\";\nimport { ref } from \"vue\"\nimport {$api} from \"@/axios\"\nimport { useRouter } from \"vue-router\";\n\n// ref()s become state properties\n// computed()s become getters\n// function()s become actions\n\nexport const useUserStore = defineStore('user', () =>\n{\n    const router = useRouter()\n    const user: any = ref({\"id\":-1,\"username\":\"\",\"email\":\"\",\"displayName\":\"\",\"imgPath\":\"\"});\n    async function initUser() {\n        $api.get('/user/me').then((res) => {\n            user.value = res.data;\n        }).catch((err:any) =>{\n            \n            console.log(err);\n        })\n    }\n\n    return({user, initUser})\n})","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"],"names":["$token","undefined","Cookies","updateToken","$api","axios","baseURL","headers","useUserStore","defineStore","useRouter","user","ref","async","initUser","then","res","value","data","catch","err","console","log","assign","target","i","arguments","length","source","key","defaultConverter","read","slice","replace","decodeURIComponent","write","encodeURIComponent","init","converter","defaultAttributes","set","attributes","document","expires","Date","now","toUTCString","escape","stringifiedAttributes","attributeName","split","cookie","get","cookies","jar","parts","join","foundKey","e","Object","create","remove","withAttributes","this","withConverter","freeze","api","path","PACKET_TYPES","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","onOpen","onData","onPacket","details","alphabet","map","prev","seed","encode","num","encoded","floor","yeast","qs","qry","pairs","pair","XMLHttpRequest","hasCORS","XHR","xdomain","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","name","poll","pause","onPause","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","request","Request","req","method","xhrStatus","pollXhr","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parse","src","b","m","exec","host","authority","ipv6uri","pathNames","queryKey","regx","names","substr","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex"],"sourceRoot":""}